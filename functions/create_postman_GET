import requests
import json

def read_curl_file(file_path):
    with open(file_path, 'r') as file:
        curl_command = file.read()
    # Extract URL from curl command
    url_start = curl_command.find('"') + 1
    url_end = curl_command.find('"', url_start)
    url = curl_command[url_start:url_end]
    return url

def parse_query_params(url):
    params = url.split('?')[1]
    param_list = params.split('&')
    parsed_params = {}
    for param in param_list:
        key, value = param.split('=')
        parsed_params[key] = value
    return parsed_params

def edit_query_params(parsed_params):
    edited_params = []
    for key, value in parsed_params.items():
        # Example of editing: Append '_test' to each value
        edited_value = value + '_test'
        edited_params.append(f"{key}={edited_value}")
    return "&".join(edited_params)

def create_get_request(api_key, collection_id, folder_id, request_name, edited_url, test_script):
    url = f'https://api.getpostman.com/collections/{collection_id}/requests?folder={folder_id}'

    headers = {
        'Content-Type': 'application/json',
        'X-API-Key': api_key
    }

    data = {
        "name": request_name,
        "url": edited_url,
        "method": "GET",
        "headers": [],
        "events": [
            {
                "listen": "test",
                "script": {
                    "id": "a8608e1a-ce4b-4129-8c89-930d26ae0f6a",
                    "exec": [test_script],
                    "type": "text/javascript"
                }
            }
        ]
    }

    response = requests.post(url, headers=headers, json=data)
    if response.status_code == 200:
        print(f"GET request '{request_name}' created successfully.")
    else:
        print(f"Failed to create GET request '{request_name}'. Status code: {response.status_code}")
    return response

def edit_and_create_get_requests(api_key, collection_id, folder_id, file_path, test_script):
    original_url = read_curl_file(file_path)
    parsed_params = parse_query_params(original_url)
    edited_query_string = edit_query_params(parsed_params)
    base_url = original_url.split('?')[0]
    edited_url = f"{base_url}?{edited_query_string}"
    
    request_name = "Edited GET Request"
    
    create_get_request(api_key, collection_id, folder_id, request_name, edited_url, test_script)
